version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lms_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../services/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - lms-network

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lms-network

  # API Gateway
  api-gateway:
    build: ../../services/api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - JWT_SECRET=dev-secret-key
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    volumes:
      - ../../services/api-gateway:/app
      - /app/node_modules

  # Auth Service
  auth-service:
    build: ../../services/auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - JWT_SECRET=dev-secret-key
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    volumes:
      - ../../services/auth-service:/app
      - /app/node_modules

  # User Service
  user-service:
    build: ../../services/user-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    volumes:
      - ../../services/user-service:/app
      - /app/node_modules

  # Video Service
  video-service:
    build: ../../services/video-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    volumes:
      - ../../services/video-service:/app
      - /app/node_modules
      - video_uploads:/app/uploads

  # Chat & Call Service
  chat-call-service:
    build: ../../services/chat-call-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    volumes:
      - ../../services/chat-call-service:/app
      - /app/node_modules

  # Payment Service
  payment-service:
    build: ../../services/payment-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - STRIPE_SECRET_KEY=sk_test_...
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    volumes:
      - ../../services/payment-service:/app
      - /app/node_modules

  # Notification Service
  notification-service:
    build: ../../services/notification-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
    networks:
      - lms-network
    volumes:
      - ../../services/notification-service:/app
      - /app/node_modules

  # Frontend
  frontend:
    build: ../../frontend
    ports:
      - "3007:3000"
    environment:
      - NODE_ENV=development
      - API_BASE_URL=http://localhost:3000
    depends_on:
      - api-gateway
    networks:
      - lms-network
    volumes:
      - ../../frontend:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  redis_data:
  video_uploads:

networks:
  lms-network:
    driver: bridge
